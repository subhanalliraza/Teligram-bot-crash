import websocket
import json
import time
import threading
import requests
import os
import sys

# 🔑 Secrets
CHAT_ID = os.getenv("TELEGRAM_CHAT")
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
WS_URL = os.getenv("WS_URL")
BOT_PASSWORD = os.getenv("BOT_PASSWORD")      # GitHub secret
INPUT_PASSWORD = os.getenv("INPUT_PASSWORD")  # Workflow input

# چیک کریں کہ سب کچھ موجود ہے
if not all([CHAT_ID, BOT_TOKEN, WS_URL, BOT_PASSWORD, INPUT_PASSWORD]):
    print("❌ Missing required environment variables", file=sys.stderr)
    sys.exit(1)

# 🔒 پاسورڈ لاک
if INPUT_PASSWORD != BOT_PASSWORD:
    print("❌ Wrong password! Bot will not start.")
    sys.exit(1)

def send_telegram(msg):
    """پیغام Telegram پر بھیجیں"""
    try:
        resp = requests.post(
            f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage",
            data={"chat_id": CHAT_ID, "text": msg}
        )
        resp.raise_for_status()
    except Exception as e:
        print(f"Telegram send error: {e}", file=sys.stderr)

def on_message(ws, message):
    """جب WebSocket سے میسج ملے"""
    try:
        data = json.loads(message)
    except json.JSONDecodeError:
        return

    # یہاں اپنا game event detection لگائیں
    if isinstance(data, dict) and data.get("type") == "new_round":
        send_telegram("⚠️ نیا راؤنڈ شروع ہونے والا ہے — 10 سیکنڈ بعد!")
        time.sleep(10)
        send_telegram("🎯 راؤنڈ شروع ہو گیا!")

def on_open(ws):
    send_telegram("🚀 WebSocket سگنل بوٹ شروع ہو گیا")

def on_close(ws, close_status_code, close_msg):
    send_telegram("🛑 بوٹ بند ہو گیا")

def run_bot():
    ws = websocket.WebSocketApp(
        WS_URL,
        on_message=on_message,
        on_open=on_open,
        on_close=on_close
    )
    ws.run_forever()

if __name__ == "__main__":
    bot_thread = threading.Thread(target=run_bot, daemon=True)
    bot_thread.start()

    # 10 منٹ بعد بوٹ بند کر دیں
    time.sleep(600)
    print("⌛ 10 منٹ مکمل، بوٹ بند ہو رہا ہے...")
    send_telegram("⌛ 10 منٹ مکمل ہو گئے — بوٹ بند ہو رہا ہے")
    sys.exit(0)
